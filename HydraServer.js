// Generated by CoffeeScript 1.7.1
(function() {
  var HydraServer, express, fs, http, https, socket, _;

  express = require('express');

  _ = require('lodash');

  socket = require('socket.io');

  https = require('https');

  http = require('http');

  fs = require('fs');

  HydraServer = (function() {
    function HydraServer(options) {

      /*
        Bind Callbacks
       */
      _.bindAll(this, 'indexRoute', 'socketBroker');

      /*
        Establish Options
       */
      if (options == null) {
        options = {};
      }
      this.options = options;
      if (this.options.port == null) {
        this.options.port = 8080;
      }
      this.options.port = Number(this.options.port);
      if (this.options.dir == null) {
        this.options.dir = '/www';
      }

      /*
        Establish Connection Listeners
       */
      this.app = express();
      this.app.use(express["static"](__dirname + this.options.dir));
      this.app.get('/', this.indexRoute);
      this.server = http.createServer(this.app);
      this.io = socket(this.server);
      this.io.on('connection', this.socketBroker);

      /*
      Establish Session Object
       */
    }

    HydraServer.prototype.indexRoute = function(req, res) {
      return res.sendFile(__dirname + this.options.indexFile);
    };

    HydraServer.prototype.startServer = function() {
      var port, startMessage;
      port = this.options.port;
      startMessage = function() {
        return console.log('Hydra Server listening on port ' + port);
      };
      return this.server.listen(this.options.port, startMessage);
    };

    HydraServer.prototype.socketBroker = function(socket) {
      return socket.emit('connected', {
        sessionDetails: 'so much detail'
      });
    };

    return HydraServer;

  })();

  module.exports = HydraServer;


  /*
  class HydraSession
    constructor:(options)->
      {@host,}
    host: null
    port: null
   */

}).call(this);

//# sourceMappingURL=HydraServer.map
